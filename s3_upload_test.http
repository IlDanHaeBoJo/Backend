### S3 업로드 API 테스트

# 1. S3 업로드용 presigned URL 생성
POST http://localhost:8000/s3/upload-url
Authorization: Bearer {{admin_token}}
Content-Type: application/json

{
  "filename": "test_document.pdf",
  "file_type": "application/pdf",
  "notice_id": 1
}

###

# 2. S3 업로드용 presigned URL 생성 (notice_id 없이)
POST http://localhost:8000/s3/upload-url
Authorization: Bearer {{admin_token}}
Content-Type: application/json

{
  "filename": "image.jpg",
  "file_type": "image/jpeg"
}

###

# 3. 파일 다운로드용 presigned URL 생성
GET http://localhost:8000/s3/download-url/notices/1/uuid-generated-filename.pdf
Authorization: Bearer {{auth_token}}

###

# 4. 파일 다운로드용 presigned URL 생성 (만료시간 지정)
GET http://localhost:8000/s3/download-url/notices/1/uuid-generated-filename.pdf?expiration=7200
Authorization: Bearer {{auth_token}}

###

# 5. 전체 워크플로우 테스트
# 5-1. S3 업로드 URL 생성
POST http://localhost:8000/s3/upload-url
Authorization: Bearer {{admin_token}}
Content-Type: application/json

{
  "filename": "sample.pdf",
  "file_type": "application/pdf",
  "notice_id": 1
}

###

# 5-2. 첨부파일 정보 생성 (업로드 후)
POST http://localhost:8000/attachments/
Authorization: Bearer {{admin_token}}
Content-Type: application/json

{
  "notice_id": 1,
  "original_filename": "sample.pdf",
  "stored_filename": "{{stored_filename}}",
  "file_path": "{{file_path}}",
  "file_size": 1024000,
  "file_type": "application/pdf"
}

###

# 5-3. 공지사항 조회 (첨부파일 포함)
GET http://localhost:8000/admin/notices/1
Authorization: Bearer {{admin_token}}

### 