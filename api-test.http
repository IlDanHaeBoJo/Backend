### 학생용 공지사항 API 테스트

### 1. 회원가입 (학생)
POST http://localhost:8000/auth/register
Content-Type: application/json

{
  "username": "student1",
  "password": "password123",
  "email": "student1@example.com",
  "name": "학생1",
  "role": "student",
  "student_id": "2024001",
  "major": "의학과"
}

### 2. 로그인
POST http://localhost:8000/auth/login
Content-Type: application/json

{
  "username": "student1",
  "password": "password123"
}

### 3. 공지사항 목록 조회
GET http://localhost:8000/student/notices/
Authorization: Bearer {{access_token}}

### 4. 특정 공지사항 조회
GET http://localhost:8000/student/notices/1
Authorization: Bearer {{access_token}}

### 5. 공지사항 조회수 증가
POST http://localhost:8000/student/notices/1/view
Authorization: Bearer {{access_token}}

### 6. 관리자용 공지사항 생성 (테스트용)
POST http://localhost:8000/admin/notices/
Authorization: Bearer {{admin_token}}
Content-Type: application/json

{
  "title": "테스트 공지사항",
  "content": "이것은 테스트용 공지사항입니다.",
  "important": true
}

### 7. 관리자용 공지사항 목록 조회
GET http://localhost:8000/admin/notices/
Authorization: Bearer {{admin_token}}

### 8. 관리자용 공지사항 수정
PUT http://localhost:8000/admin/notices/1
Authorization: Bearer {{admin_token}}
Content-Type: application/json

{
  "title": "수정된 공지사항",
  "content": "내용이 수정되었습니다.",
  "important": false
}

### 9. 관리자용 공지사항 삭제
DELETE http://localhost:8000/admin/notices/1
Authorization: Bearer {{admin_token}} 